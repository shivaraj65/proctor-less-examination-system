[{"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\index.js":"1","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\App.js":"2","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\landing.js":"4","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\login\\login.js":"5","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\masterHeader\\mastheader.js":"6","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\aboutSection\\about.js":"7","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\servicess\\service.js":"8","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\creator\\creator.js":"9","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\contact\\contact.js":"10","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\lobby\\lobby.js":"11","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone\\exam.js":"12","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\deviceTest\\tester.js":"13","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\register\\register.js":"14","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\dash.js":"15","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\navbar\\snavbar.js":"16","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\create\\create.js":"17","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffLogin\\staffLogin.js":"18","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\delete\\delete.js":"19","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\registerationZone\\registerationZone.js":"20","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\footer\\footer.js":"21","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone2\\zone.js":"22","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone\\clock\\clock.js":"23","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\mailauth\\mailauth.js":"24","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\lobby\\feedbackform\\feedback.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":1800,"mtime":1616560580935,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":662,"mtime":1615484266427,"results":"30","hashOfConfig":"27"},{"size":6661,"mtime":1616487736126,"results":"31","hashOfConfig":"27"},{"size":2754,"mtime":1616486427896,"results":"32","hashOfConfig":"27"},{"size":1288,"mtime":1604307108208,"results":"33","hashOfConfig":"27"},{"size":2264,"mtime":1615484559049,"results":"34","hashOfConfig":"27"},{"size":2516,"mtime":1616466993960,"results":"35","hashOfConfig":"27"},{"size":1335,"mtime":1604307108209,"results":"36","hashOfConfig":"27"},{"size":9747,"mtime":1616565161787,"results":"37","hashOfConfig":"27"},{"size":22441,"mtime":1616892792438,"results":"38","hashOfConfig":"27"},{"size":5823,"mtime":1615492153825,"results":"39","hashOfConfig":"27"},{"size":10563,"mtime":1616889445594,"results":"40","hashOfConfig":"27"},{"size":4282,"mtime":1616886970201,"results":"41","hashOfConfig":"27"},{"size":1621,"mtime":1615492678016,"results":"42","hashOfConfig":"27"},{"size":20842,"mtime":1616890518818,"results":"43","hashOfConfig":"27"},{"size":5495,"mtime":1615493078815,"results":"44","hashOfConfig":"27"},{"size":3527,"mtime":1615492708770,"results":"45","hashOfConfig":"27"},{"size":11242,"mtime":1615710908206,"results":"46","hashOfConfig":"27"},{"size":342,"mtime":1615484358441,"results":"47","hashOfConfig":"27"},{"size":2386,"mtime":1615865383969,"results":"48","hashOfConfig":"27"},{"size":581,"mtime":1604307108202,"results":"49","hashOfConfig":"27"},{"size":3012,"mtime":1616486833331,"results":"50","hashOfConfig":"27"},{"size":3747,"mtime":1616565099029,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1avazhv",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\index.js",[],["109","110"],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\App.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\landing.js",["111","112"],"import React from 'react'\r\nimport './landing.css'\r\n\r\n//importing sections\r\nimport MasterHeader from './sections/masterHeader/mastheader'\r\nimport About from './sections/aboutSection/about'\r\nimport Service from './sections/servicess/service'\r\nimport Creator from './sections/creator/creator'\r\nimport Contact from './sections/contact/contact'\r\nimport Footer from './sections/footer/footer'\r\n\r\nconst Landing =()=>{\r\n    return(\r\n        <div>\r\n            <MasterHeader/>\r\n            {/* <About/> */}\r\n            <Service/>\r\n            <Creator/>\r\n            {/* <Contact/> */}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Landing)","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\login\\login.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\masterHeader\\mastheader.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\aboutSection\\about.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\servicess\\service.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\creator\\creator.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\contact\\contact.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\lobby\\lobby.js",["113","114","115","116","117"],"import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './lobby.css'\r\nimport axios from 'axios'\r\n\r\nconst Lobby=()=>{\r\n    const [examData,setexamData]=useState(null)\r\n    const [dateToday, setdateToday] = useState(null)\r\n\r\n    //for the redirects- react-router-dom\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    useEffect(()=>{\r\n        //first fetcht the data for the registered exams\r\n        //then fetch the data for the\r\n\r\n        // axios \r\n        const json = {id:window.sessionStorage.getItem(\"userID\")};  \r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                   'Content-Type': 'application/json',\r\n                }}\r\n        axios.post('https://cbqoiztgpb.execute-api.us-east-1.amazonaws.com/production', \r\n        JSON.stringify(json),config)\r\n        .then(function (response) {\r\n            if(response.data.status===\"success\"){\r\n                setexamData(response.data.message.Items[0].registrationData)\r\n                console.log(response.data.message.Items[0].registrationData)\r\n            }\r\n            if(response.data.status===\"failed\"){\r\n                setexamData([])\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"something went wrong. Please refresh the page.\")\r\n            console.log(\"error\")\r\n        });\r\n        var today = new Date();\r\n        setdateToday(today)\r\n        \r\n    },[])\r\n\r\n    //current time updater\r\n    useEffect(()=>{\r\n        setTimeout(() =>  {\r\n            setdateToday(new Date())\r\n        }, 1000*60);\r\n      },[dateToday])\r\n\r\n    //if already attended block the next entry\r\n    function checkExamForAttending(){\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <div className=\"user-background\"></div> */}\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\" style={{backgroundImage: \"linear-gradient(to top, rgb(182, 255, 210,0.3), #f2e3bd88)\",opacity:\"0.7\"}}>\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand  text-primary\" href=\"/\">&lt;meriTTrack&gt;</a>\r\n                    <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark active\">Home</h1> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <h1 className=\"nav-link text-dark\">Help</h1>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        <div className=\"container\">\r\n            <div className=\"row nav-padding\">\r\n                {/* left pane */}\r\n                <div className=\"col-md-4 card-flex-90vw\">\r\n                        <div className=\"card p-4 my-4 card-enhancer\">\r\n                            <label className=\"text-secondary text-center\">Test your Environment</label> \r\n                            <button \r\n                                className=\"btn btn-lg btn-outline-secondary btn-block my-3 font-weight-bold\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/test\")\r\n                                }}\r\n                            >TEST</button>\r\n                        </div>\r\n                        <div className=\"card p-4 my-4 card-enhancer\">\r\n                            <label className=\"text-secondary text-center\">Register for your exams here.</label> \r\n                            <button \r\n                                className=\"btn btn-lg btn-outline-secondary btn-block my-3 font-weight-bold\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/registerationZone/\"+window.sessionStorage.getItem(\"userID\")+\"/\"+window.sessionStorage.getItem(\"userName\"))\r\n                                }}\r\n                            >Registration Zone</button>\r\n                        </div>\r\n                </div>\r\n\r\n                {/* right pane */}\r\n                <div className=\"col-md-8 py-4 card my-4 table-scroll-x\">\r\n                    <h5 className=\"text-secondary text-center mb-3\">Registered Exams</h5>\r\n                    <table className=\"table table-striped table-light table table-borderless table-hover \">\r\n                        <thead>\r\n                            <tr className=\"text-dark\">\r\n                                <th scope=\"col\">Subject Code</th>\r\n                                <th scope=\"col\">Subject Name</th>\r\n                                <th scope=\"col\">Date of Exam</th>\r\n                                <th scope=\"col\">Time</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {examData && examData.map((entry,index)=>{\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <th scope=\"row\" className=\"text-secondary\">{entry.subjectID}</th>\r\n                                        <td className=\"text-secondary\">{entry.subjectName}</td>\r\n                                        <td className=\"text-info\">{entry.date}</td>\r\n                                        <td className=\"text-info\">{entry.time}</td>\r\n                                        <td>\r\n                                            <button \r\n                                                className=\"btn btn-sm btn-secondary\" \r\n                                                style={{padding:\"0\"}}\r\n                                                onClick={()=>{ \r\n                                                    //data form the entry\r\n                                                    var slicehrs=parseInt(entry.time.slice(0,2));\r\n                                                    var slicemins=parseInt(entry.time.slice(3,));\r\n\r\n                                                    //data from the current time\r\n                                                    const systemHrs=parseInt(dateToday.getHours())\r\n                                                    const systemMins=parseInt(dateToday.getMinutes())\r\n                                                    //system date\r\n                                                    const systemdate =dateToday.getFullYear()+'-'+String(dateToday.getMonth()+1).padStart(2,'0')+'-'+String(dateToday.getDate()).padStart(2,'0');\r\n                                                    //check date for exam\r\n                                                    if(entry.date===systemdate){\r\n                                                            if(true){\r\n                                                        // if(systemHrs===slicehrs && systemMins>=slicemins && systemMins <=(slicemins+10)){                                                            \r\n                                                            // alert(\"date and time ok\")\r\n                                                            //store the examid in session for the next window\r\n                                                            window.sessionStorage.setItem('examID',entry.subjectID);\r\n                                                            //redirect to the examzone\r\n                                                            redirect(\"/exam\")\r\n                                                        }else{\r\n                                                            alert(\"this is not he right TIME to write the exam!\")                                                       \r\n                                                        }\r\n                                                    }else{\r\n                                                        alert(\"This is not the right DAY to write the exam!\")\r\n                                                    }\r\n                                                    }}\r\n                                                >\r\n                                                <img src=\"https://img.icons8.com/cute-clipart/64/000000/enter-2.png\" alt=\"\" style={{maxHeight:\"32px\"}}/>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    {examData===null?\r\n                        <div className=\"m-4\">\r\n                            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>:null}\r\n                        \r\n                    <button \r\n                        className=\"btn btn-info\"\r\n                        onClick={()=>{\r\n                            redirect(\"/feedback\")\r\n                        }   \r\n                    }>feedback form</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Lobby)","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone\\exam.js",["118","119","120","121","122","123","124","125"],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\deviceTest\\tester.js",["126","127","128","129"],"import React,{useState} from 'react';\r\nimport './tester.css';\r\nimport Webcam from \"react-webcam\";\r\nimport axios from 'axios'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst WebcamComponent = () => <Webcam />;\r\n\r\nconst Tester=()=>{\r\n\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    \r\n    const [popupContent,setPopupContent]=useState(\"\")\r\n    // states and function for the popup-modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [dynamicClass, setdynamicClass] = useState(\"\")\r\n\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = React.useState(null);\r\n  \r\n    const capture = React.useCallback(() => {\r\n      const imageSrc = webcamRef.current.getScreenshot({width: 500, height: 300});\r\n      setImgSrc(imageSrc);\r\n    //   console.log(imageSrc);\r\n        //call axios post\r\n        testImage(imageSrc);\r\n    }, [webcamRef, setImgSrc]);\r\n    const testImage=(imagedata)=>{\r\n        //axios request\r\n        const json = JSON.stringify({ image: imagedata,rollno:window.sessionStorage.getItem(\"userRollno\")});\r\n        const config  = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }}\r\n            axios.post('https://ydiu1o5plh.execute-api.us-east-1.amazonaws.com/production', \r\n            json,config)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                // console.log(response.data.FaceMatches[0].Similarity)\r\n                if(response.data.FaceMatches.length===1 && response.data.UnmatchedFaces.length===0){\r\n                    setdynamicClass(\"text-success\")\r\n                    setPopupContent(\"Verified with a confidence score of :\"+response.data.FaceMatches[0].Similarity.toFixed(3))\r\n                    handleShow()\r\n                }else if(response.data.FaceMatches.length===1 && response.data.UnmatchedFaces.length>=1){\r\n                    setdynamicClass(\"text-warning\")\r\n                    setPopupContent(\"Unknown persons are Identified with you, You are requested to attend the Exam separetely. thankyou!\")\r\n                    handleShow()\r\n                }else if(response.data.UnmatchedFaces.length>=1){\r\n                    setdynamicClass(\"text-danger\")\r\n                    setPopupContent(\"Our systems just picked \"+response.data.UnmatchedFaces.length+\" unknown persons, we request you to attend the Exam separeately. If anyone is found other than you, your examination will be disqualified.\")\r\n                    handleShow()\r\n                }\r\n                \r\n            })\r\n            .catch(function (error) {    \r\n                setPopupContent(\"Error Communicating the server.. try agin! if error persists contact the admin.\")\r\n                handleShow()            \r\n                console.log(\"error\")\r\n            });\r\n    }\r\n    return(\r\n        <div className=\"text-center\">\r\n            <div className=\"background-tester-custom\"></div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\" style={{backgroundImage: \"linear-gradient(to top, rgb(182, 255, 210,0.3), #f2e3bd88)\",opacity:\"0.7\"}}>\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand  text-primary\" href=\"/\">&lt;meriTTrack&gt;</a>\r\n                    <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark active\">Home</h1> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <h1 className=\"nav-link text-dark\">Help</h1>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        \r\n            <div className=\"tester-custom\">\r\n                <Webcam\r\n                    className={\"webcam-element mt-4\"}                    \r\n                    audio={false}\r\n                    ref={webcamRef}\r\n                    screenshotFormat=\"image/jpeg\"\r\n                />\r\n                <br/>\r\n                <button \r\n                    className=\"btn btn-dark mt-3 px-4\"\r\n                    onClick={capture}>TEST VISUAL RECOGNITION</button>\r\n                    <p className=\"muted text-secondary mt-2\">*confidence score should be above 99.7</p>\r\n            </div>\r\n\r\n            {/* popup */}\r\n             <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>&lt;meriTTrack&gt;</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h6 className={dynamicClass}>{popupContent}</h6>\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Tester);","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\register\\register.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\dash.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\navbar\\snavbar.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\create\\create.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffLogin\\staffLogin.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\staffdash\\delete\\delete.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\registerationZone\\registerationZone.js",["130"],"import React,{useState} from 'react'\r\nimport './registeration.css';\r\n\r\nimport axios from 'axios'\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import Button from 'react-bootstrap/Button'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RegisterationZone=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    const [popupContent,setPopupContent]=useState(\"\")\r\n    // states and function for the popup-modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const [pageno, setpageno] = useState(\"0\")\r\n    const [dept, setdept] = useState(\"\")\r\n    const [edata,setedata]=useState(null)\r\n    const [selectedData, setselectedData] = useState(null)\r\n    const [checkbox,setcheckbox]= useState(null)\r\n\r\n    const submitdept=()=>{\r\n        // axios \r\n        const json = {dept:dept};  \r\n        // console.log(json)\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                   'Content-Type': 'application/json',\r\n                }}\r\n        axios.post('https://3ki1z5thvi.execute-api.us-east-1.amazonaws.com/production', \r\n        JSON.stringify(json),config)\r\n        .then(function (response) {\r\n           if(response.data.message.Count!==0){\r\n                setedata(response.data.message.Items)\r\n                // console.log(response.data.message.Items)\r\n                setselectedData([]);\r\n                let temp=[];\r\n                for(let i=0;i<response.data.message.Count;i++){\r\n                    temp.push(false)\r\n                }\r\n                setcheckbox(temp)\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"something went wrong. Please try again.\")\r\n            console.log(\"error\")\r\n        });        \r\n    }\r\n\r\n    const FinalSubmit=()=>{\r\n        //https://e0a5x5pqle.execute-api.us-east-1.amazonaws.com/production\r\n        let tempdata=[];\r\n        for(var i=0;i<checkbox.length;i++){\r\n            if(checkbox[i]===true){\r\n                    tempdata.push({subjectID:edata[i].examID,subjectName:edata[i].examName,date:edata[i].DOE,time:edata[i].time})\r\n            }\r\n        }\r\n        setselectedData(tempdata)\r\n        // axios \r\n        const json = {uID:window.sessionStorage.getItem(\"userID\"),sName:window.sessionStorage.getItem(\"userName\"),dept:dept,rData:tempdata};  \r\n        // console.log(json)\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                   'Content-Type': 'application/json',\r\n                }}\r\n        axios.post('https://e0a5x5pqle.execute-api.us-east-1.amazonaws.com/production', \r\n        JSON.stringify(json),config)\r\n        .then(function (response) {\r\n            console.log(response.data.message)\r\n            if(response.data.status===\"Registration successfully done!... redirecting to dashboard.\"){\r\n                setPopupContent(response.data.status)\r\n                handleShow()\r\n                redirect(\"/ul/\"+window.sessionStorage.getItem(\"userID\")+\"/\"+window.sessionStorage.getItem(\"userName\"));\r\n            }else if(response.data.status===\"failed\"){\r\n                setPopupContent(response.data.message) \r\n                handleShow()\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"something went wrong. Please try again.\")\r\n            console.log(\"error\")\r\n        }); \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\" style={{backgroundImage: \"linear-gradient(to top, rgb(182, 255, 210,0.3), #f2e3bd88)\",opacity:\"0.7\"}}>\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand  text-primary\" href=\"/\">&lt;meriTTrack&gt;</a>\r\n                    <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark\">Home</h1> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark\">Dashboard</h1> \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark\">Help</h1>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <h1 className=\"nav-link text-dark\">{window.sessionStorage.getItem(\"userName\")}</h1>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container nav-padding\">\r\n                <div className=\"card card-enhancer p-4 mt-2\">\r\n                    <h5 className=\"text-center text-primary\">Registation Zone</h5>\r\n                    <hr/>\r\n                    <p className=\"text-center text-secondary\">register for your semester exams here</p>\r\n\r\n                    {pageno && pageno===\"0\"?\r\n                        <div className=\"container-custom-register p-4\">\r\n                            <label className=\"text-secondary muted\">Select your department here:</label>\r\n                            <select \r\n                                className=\"form-control text-info\"\r\n                                onChange={(e)=>{setdept(e.target.value)}}\r\n                                value={dept}\r\n                                >\r\n                                <option></option>\r\n                                <option>cse</option>\r\n                                <option>ece</option>\r\n                                <option>eee</option>\r\n                                <option>mech</option>\r\n                            </select>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-outline-success btn-block float-md-right mt-4\"\r\n                                onClick={()=>{\r\n                                    if(dept===\"\"){\r\n                                        alert(\"enter your department to continue\")\r\n                                    }else{\r\n                                        submitdept()\r\n                                        setpageno(\"1\")\r\n                                    }\r\n                                }}\r\n                            >submit</button> \r\n                        </div>\r\n                    :null}\r\n                    {pageno && pageno===\"1\"?\r\n                        <div>\r\n                                \r\n                        <div className=\"row mt-4 mx-2\">\r\n                            <div className=\"col-sm-1 text-center\">\r\n                                \r\n                            </div>\r\n                            <div className=\"col-sm-3 pt-2 text-info\">\r\n                                <p>Subject Code</p>\r\n                            </div>\r\n                            <div className=\"col-sm-8 pt-2 text-info\">\r\n                                <p>Subject Name</p>\r\n                            </div>\r\n                        </div>\r\n                        <hr/>\r\n                                {edata && edata.map((entry,index)=>{\r\n                                    return(\r\n                                        <div className=\"row mt-1 hovered mx-2\" key={index}>\r\n                                            <div className=\"col-sm-1 text-center\">\r\n                                                <input \r\n                                                    className=\"form-check-input mt-2 ml-1 d-block\"\r\n                                                    style={{\"width\": \"20px\", \"height\": \"20px\"}} \r\n                                                    type=\"checkbox\" \r\n                                                    value={entry.examID}\r\n                                                    onChange={(e)=>{\r\n                                                        let temp=checkbox;\r\n                                                        temp[index]=!checkbox[index]\r\n                                                        setcheckbox(temp)\r\n                                                    }}\r\n                                                    />\r\n                                                    <br/>\r\n                                            </div>\r\n                                            <div className=\"col-sm-3 pt-2\">\r\n                                                <p>{entry.examID}</p>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 pt-2 text-secondary\">\r\n                                                <p>{entry.examName}</p>\r\n                                            </div>\r\n                                            \r\n                                            <hr/>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                {edata===null?\r\n                                    <div className=\"m-4\">\r\n                                        <div className=\"spinner-border text-warning\" role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>:null}\r\n                           \r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-outline-success float-md-right mt-4\"\r\n                                onClick={()=>{\r\n                                    FinalSubmit();\r\n                                }}\r\n                            >CONFIRM</button> \r\n                        </div>\r\n                    :null}\r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n            {/* popup */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>&lt;meriTTrack&gt;</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {popupContent}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                {/* <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button> */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(RegisterationZone);\r\n","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\landing\\sections\\footer\\footer.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone2\\zone.js",["131","132","133","134"],"import React,{useState,useCallback,useEffect} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Wallpaper from '../../assets/images/wallpaper-04.jpg'\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\r\nimport './zone.css'\r\n\r\nconst Zone=()=>{\r\n    //for the redirects- react-router-dom\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n\r\n    // variable holding the full screen trigger\r\n    const screen1 = useFullScreenHandle();\r\n\r\n    // callback function from the react-fullscreen package\r\n    const reportChange = useCallback((state, handle) => {\r\n        if (handle === screen1) {\r\n          console.log('Screen 1 went to', state)\r\n          //handle is a function holding the active state , enter & exit function\r\n          console.log(\"handle \",handle)\r\n        }\r\n    }, [screen1]);\r\n\r\n    const fullscreenFunc=(value)=>{\r\n        if(value===\"enter\"){\r\n          //fullscreen flag is set to true         \r\n          screen1.enter() \r\n        }\r\n        if(value===\"exit\"){\r\n          //fullscreen flag is set to false          \r\n          screen1.exit()\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"body\">\r\n        <FullScreen handle={screen1} onChange={reportChange}>\r\n        <div className=\"background1\" style={{backgroundImage:\"url(\"+Wallpaper+\")\"}}></div>\r\n\r\n        <div className=\"blurred-box p-4 custom-blurred-box\">\r\n            <div className=\"inner-box px-4\">\r\n                <h4 className=\"text-center text-primary\">INSTRUCTIONS</h4>\r\n                <hr/>\r\n                <li className=\"text-light fs-13 my-2\">Make sure you have a decent amount of network stability.</li>\r\n                <li className=\"text-light  fs-13 my-2\">Never use any other Applications.</li>\r\n                <li className=\"text-light fs-13 my-2\">Dont move out of camera.</li>\r\n                <li className=\"text-light fs-13 my-2\">If the system finds any suspecious activity it will automatically terminate the examination.</li>\r\n                <button \r\n                    className=\"btn btn-lg btn-info float-right mt-4\"\r\n                    onClick={()=>{redirect(\"/zone/\")}}\r\n                    >Agree & Continue</button>\r\n            </div>\r\n        </div>\r\n        </FullScreen>\r\n    </div>\r\n    )\r\n}\r\nexport default React.memo(Zone)","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\examZone\\clock\\clock.js",[],"C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\mailauth\\mailauth.js",["135"],"import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst MailRedirect=()=>{\r\n    let {id}=useParams()\r\n\r\n    const [responseData,setResponseData]=useState(\"\")\r\n    // states and function for the modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // axios \r\n        let json = {ID:id};    \r\n        // console.log(quizID);\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n        }}\r\n        axios.post('https://h353k1saoe.execute-api.us-east-1.amazonaws.com/production', \r\n        JSON.stringify(json),config)\r\n        .then(function (response) {\r\n            if(response.data.status ===\"success\"){\r\n                setResponseData(response.data.message)\r\n                handleShow()\r\n            }else{\r\n                setResponseData(response.data.message)\r\n                handleShow()\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Error!! Check your Network and Try again.\")\r\n        });\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"custom-findQuiz-bg fullscreen-custom\">\r\n                <div className=\"pt-4 text-center\">\r\n                    <div className=\"card form-signin mt-4 p-4\"  style={{\"width\":\"80vw\",\"margin\":\"auto\",\"maxWidth\":\"400px\"}}>\r\n                        <h5 className=\"text-secondary\">verifying your Account</h5>\r\n                        <hr/>\r\n                        <h5 className=\"text-secondary pb-2\">{\"Account ID : \"+id}</h5>\r\n                        <div className=\"d-flex align-items-center mt-4 mx-4\">\r\n                            <strong>Verifying...</strong>\r\n                            <div className=\"spinner-grow text-warning ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n                >\r\n                <Modal.Header>\r\n                <Modal.Title>meriTTrack</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {responseData}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={()=>{redirect('/')}}>\r\n                    LOGIN\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>                            \r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(MailRedirect)","C:\\Users\\SHIVARAJ\\Desktop\\project\\complete project\\react-frontend\\src\\layouts\\lobby\\feedbackform\\feedback.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":15},{"ruleId":"140","severity":1,"message":"145","line":54,"column":14,"nodeType":"142","messageId":"143","endLine":54,"endColumn":35},{"ruleId":"140","severity":1,"message":"146","line":128,"column":57,"nodeType":"142","messageId":"143","endLine":128,"endColumn":65},{"ruleId":"140","severity":1,"message":"147","line":129,"column":57,"nodeType":"142","messageId":"143","endLine":129,"endColumn":66},{"ruleId":"140","severity":1,"message":"148","line":132,"column":59,"nodeType":"142","messageId":"143","endLine":132,"endColumn":68},{"ruleId":"140","severity":1,"message":"149","line":133,"column":59,"nodeType":"142","messageId":"143","endLine":133,"endColumn":69},{"ruleId":"140","severity":1,"message":"150","line":9,"column":7,"nodeType":"142","messageId":"143","endLine":9,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":35,"column":10,"nodeType":"153","endLine":35,"endColumn":19,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"155","line":71,"column":12,"nodeType":"142","messageId":"143","endLine":71,"endColumn":25},{"ruleId":"151","severity":1,"message":"156","line":110,"column":7,"nodeType":"153","endLine":110,"endColumn":9,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"158","line":120,"column":9,"nodeType":"153","endLine":120,"endColumn":28,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"160","line":144,"column":9,"nodeType":"153","endLine":144,"endColumn":30,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"162","line":180,"column":8,"nodeType":"153","endLine":180,"endColumn":16,"suggestions":"163"},{"ruleId":"151","severity":1,"message":"164","line":353,"column":9,"nodeType":"153","endLine":353,"endColumn":36,"suggestions":"165"},{"ruleId":"140","severity":1,"message":"150","line":10,"column":7,"nodeType":"142","messageId":"143","endLine":10,"endColumn":22},{"ruleId":"140","severity":1,"message":"166","line":15,"column":11,"nodeType":"142","messageId":"143","endLine":15,"endColumn":19},{"ruleId":"140","severity":1,"message":"167","line":27,"column":12,"nodeType":"142","messageId":"143","endLine":27,"endColumn":18},{"ruleId":"151","severity":1,"message":"168","line":35,"column":8,"nodeType":"153","endLine":35,"endColumn":30,"suggestions":"169"},{"ruleId":"140","severity":1,"message":"170","line":24,"column":12,"nodeType":"142","messageId":"143","endLine":24,"endColumn":24},{"ruleId":"140","severity":1,"message":"171","line":1,"column":15,"nodeType":"142","messageId":"143","endLine":1,"endColumn":23},{"ruleId":"140","severity":1,"message":"172","line":1,"column":36,"nodeType":"142","messageId":"143","endLine":1,"endColumn":45},{"ruleId":"140","severity":1,"message":"173","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":13},{"ruleId":"140","severity":1,"message":"174","line":27,"column":11,"nodeType":"142","messageId":"143","endLine":27,"endColumn":25},{"ruleId":"151","severity":1,"message":"175","line":46,"column":7,"nodeType":"153","endLine":46,"endColumn":9,"suggestions":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'Contact' is defined but never used.","'checkExamForAttending' is defined but never used.","'slicehrs' is assigned a value but never used.","'slicemins' is assigned a value but never used.","'systemHrs' is assigned a value but never used.","'systemMins' is assigned a value but never used.","'WebcamComponent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'endexamflag', 'fullscreen', and 'violationsubmit'. Either include them or remove the dependency array.","ArrayExpression",["179"],"'scoreobtained' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fullscreenFunc'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'autosubmit'. Either include it or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'capture' and 'timer'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'addurl', 'cred', 'endexamflag', and 'violationsubmit'. Either include them or remove the dependency array. You can also do a functional update 'setcred(c => ...)' if you only need 'cred' in the 'setcred' call.",["183"],"React Hook useEffect has missing dependencies: 'periodicSubmit' and 'timer'. Either include them or remove the dependency array.",["184"],"'redirect' is assigned a value but never used.","'imgSrc' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'testImage'. Either include it or remove the dependency array.",["185"],"'selectedData' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Modal' is defined but never used.","'fullscreenFunc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [endexamflag, fullscreen, screen1, violationsubmit]",{"range":"203","text":"204"},"Update the dependencies array to be: [fullscreenFunc]",{"range":"205","text":"206"},"Update the dependencies array to be: [autosubmit, timer, timerActive]",{"range":"207","text":"208"},"Update the dependencies array to be: [capture, facetimer, fekogFlag, timer]",{"range":"209","text":"210"},"Update the dependencies array to be: [addurl, cred, endexamflag, imgSrc, violationsubmit]",{"range":"211","text":"212"},"Update the dependencies array to be: [freqSubmitTimer, fekogFlag, timer, periodicSubmit]",{"range":"213","text":"214"},"Update the dependencies array to be: [testImage]",{"range":"215","text":"216"},"Update the dependencies array to be: [id]",{"range":"217","text":"218"},[1290,1299],"[endexamflag, fullscreen, screen1, violationsubmit]",[4176,4178],"[fullscreenFunc]",[4453,4472],"[autosubmit, timer, timerActive]",[5307,5328],"[capture, facetimer, fekogFlag, timer]",[6911,6919],"[addurl, cred, endexamflag, imgSrc, violationsubmit]",[13679,13706],"[freqSubmitTimer, fekogFlag, timer, periodicSubmit]",[1096,1118],"[testImage]",[1480,1482],"[id]"]